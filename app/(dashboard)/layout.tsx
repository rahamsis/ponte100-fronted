
// import type { Metadata } from "next";
import { Inter } from 'next/font/google';
import { Providers } from "../providers";
import Sidebar from "../components/sidebar/sideBar";
import "../../app/globals.css";
import HeaderAuth from "../components/header/headerAuth";
import FooterAuth from "../components/footer/footerAuth";
import { metadata } from './metadata';
import { getServerSession } from "next-auth";
import authOptions from '../lib/authOptions';
const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'Metodo Ponte 100',
//   description: 'Generated by RahamsisCG.',
// };

// if (status === "loading") {
//     return <LoadingSpinner />;
//   }

export default async function RootLayout({ children, }: Readonly<{ children: React.ReactNode; }>) {
  const session = await getServerSession(authOptions);

  const getImageUrl = () => {
    if (Array.isArray(metadata.openGraph?.images)) {
      return typeof metadata.openGraph.images[0] === 'object' && 'url' in metadata.openGraph.images[0]
        ? metadata.openGraph.images[0].url
        : "";
    }
    return "";
  };

  const getImageAlt = () => {
    if (Array.isArray(metadata.openGraph?.images)) {
      return typeof metadata.openGraph.images[0] === 'object' && 'alt' in metadata.openGraph.images[0]
        ? metadata.openGraph.images[0].alt
        : "";
    }
    return "";
  };

  return (
    <html lang="en">
      <head>
        <title>PONTE 100™ - Simulador de Exámenes</title>
        <meta name="description" content={metadata.description || ""} />
        <meta property="og:title" content={String(metadata.openGraph?.title) || ""} />
        <meta property="og:description" content={String(metadata.openGraph?.description) || ""} />
        <meta property="og:url" content={String(metadata.openGraph?.url) || ""} />
        <meta property="og:site_name" content={String(metadata.openGraph?.siteName) || ""} />
        <meta property="og:image" content={getImageUrl().toString()} />
        <meta property="og:image:alt" content={getImageAlt()} />
      </head>
      <body className={`flex min-h-screen overflow-x-hidden ${inter.className}`}>
        <Providers>
          <div className="flex flex-row w-full">
            <Sidebar session={session} />
            <div className="flex flex-col flex-1">
              <HeaderAuth />
              <main className="lg:pl-32 flex-1 overflow-auto">
                {children}
              </main>
              <FooterAuth />
            </div>
          </div>
        </Providers>
      </body>
    </html>
  );
}
